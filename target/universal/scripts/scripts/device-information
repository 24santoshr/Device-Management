#!/bin/sh

realpath () {
(
  TARGET_FILE="$1"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" = "." -o "$TARGET_FILE" = ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  echo "$(pwd -P)/$TARGET_FILE"
)
}

# Allow user and template_declares (see below) to add java options.
addJava () {
  java_opts="$java_opts $1"
}

# Allow user to specify java options. These get listed first per bash-template.
if [ -n "$JAVA_OPTS" ]
then
  addJava "$JAVA_OPTS"
fi

# Loads a configuration file full of default command line options for this script.
loadConfigFile() {
  cat "$1" | sed '/^\#/d' | sed 's/^-J-X/-X/' | tr '\r\n' ' '
}


real_script_path="$(realpath "$0")"
app_home="$(realpath "$(dirname "$real_script_path")")"
lib_dir="$(realpath "${app_home}/../lib")"

app_mainclass=flix.deviceregistry.Registry

script_conf_file="${app_home}/../conf/application.ini"
app_classpath="$lib_dir/device-information.device-information-1.0.0-SNAPSHOT.jar:$lib_dir/org.scala-lang.scala-library-2.12.4.jar:$lib_dir/org.scala-lang.modules.scala-java8-compat_2.12-0.8.0.jar:$lib_dir/com.typesafe.akka.akka-stream_2.12-2.5.14.jar:$lib_dir/com.typesafe.akka.akka-actor_2.12-2.5.14.jar:$lib_dir/com.typesafe.config-1.3.3.jar:$lib_dir/com.typesafe.akka.akka-protobuf_2.12-2.5.14.jar:$lib_dir/org.reactivestreams.reactive-streams-1.0.2.jar:$lib_dir/com.typesafe.ssl-config-core_2.12-0.2.3.jar:$lib_dir/org.scala-lang.modules.scala-parser-combinators_2.12-1.1.0.jar:$lib_dir/com.typesafe.akka.akka-http-spray-json_2.12-10.1.1.jar:$lib_dir/io.spray.spray-json_2.12-1.3.4.jar:$lib_dir/org.parboiled.parboiled_2.12-2.1.4.jar:$lib_dir/com.chuusai.shapeless_2.12-2.3.2.jar:$lib_dir/org.typelevel.macro-compat_2.12-1.1.1.jar:$lib_dir/com.typesafe.akka.akka-http-testkit_2.12-10.1.5.jar:$lib_dir/com.typesafe.akka.akka-http_2.12-10.1.5.jar:$lib_dir/com.typesafe.akka.akka-http-core_2.12-10.1.5.jar:$lib_dir/com.typesafe.akka.akka-parsing_2.12-10.1.5.jar:$lib_dir/com.typesafe.akka.akka-stream-testkit_2.12-2.5.12.jar:$lib_dir/com.typesafe.akka.akka-testkit_2.12-2.5.12.jar:$lib_dir/com.typesafe.slick.slick_2.12-3.2.3.jar:$lib_dir/org.slf4j.slf4j-api-1.7.25.jar:$lib_dir/com.typesafe.slick.slick-hikaricp_2.12-3.2.3.jar:$lib_dir/com.zaxxer.HikariCP-2.5.1.jar:$lib_dir/com.typesafe.slick.slick-codegen_2.12-3.2.3.jar:$lib_dir/mysql.mysql-connector-java-5.1.34.jar:$lib_dir/org.slf4j.slf4j-nop-1.6.4.jar:$lib_dir/com.h2database.h2-1.4.197.jar"


# If a configuration file exist, read the contents to $opts
[ -f "$script_conf_file" ] && opts=$(loadConfigFile "$script_conf_file")

exec java $java_opts -classpath $app_classpath $opts $app_mainclass $@
