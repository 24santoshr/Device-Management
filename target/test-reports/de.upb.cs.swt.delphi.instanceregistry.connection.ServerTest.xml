<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="24santoshr" name="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" tests="39" errors="0" failures="1" skipped="0" time="8.76" timestamp="2020-05-26T05:21:54">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/usr/lib32:/lib/i386-linux-gnu:/lib32:/usr/lib/i386-linux-gnu:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.181-b13"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/santosh/delphi-registry"/><property name="java.runtime.version" value="1.8.0_181-b13"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/tmp/jna-3506402/jna4235178199409041273.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.15.0-99-generic"/><property name="user.home" value="/root"/><property name="user.timezone" value="Europe/Berlin"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="root"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar test"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_181"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully register and deregister when entity is valid" time="6.243">
                                                 <failure message="401 Unauthorized did not equal 200 OK" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: 401 Unauthorized did not equal 200 OK
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527)
	at org.scalatest.WordSpec.newAssertionFailedException(WordSpec.scala:1881)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501)
	at de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest.$anonfun$assertValidRegister$1(ServerTest.scala:1016)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:12)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)
	at akka.http.scaladsl.testkit.RouteTest.$anonfun$check$1(RouteTest.scala:56)
	at akka.http.scaladsl.testkit.RouteTestResultComponent$RouteTestResult.$tilde$greater(RouteTestResultComponent.scala:50)
	at de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest.assertValidRegister(ServerTest.scala:1015)
	at de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest.$anonfun$new$2(ServerTest.scala:99)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.WordSpec.withFixture(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076)
	at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088)
	at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070)
	at org.scalatest.WordSpec.runTest(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.WordSpecLike.runTests(WordSpecLike.scala:1147)
	at org.scalatest.WordSpecLike.runTests$(WordSpecLike.scala:1146)
	at org.scalatest.WordSpec.runTests(WordSpec.scala:1881)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at org.scalatest.WordSpec.org$scalatest$WordSpecLike$$super$run(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192)
	at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190)
	at de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest.org$scalatest$BeforeAndAfterAll$$super$run(ServerTest.scala:41)
	at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)
	at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)
	at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)
	at de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest.run(ServerTest.scala:41)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</failure>
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not register when entity is invalid" time="0.191">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should authenticate user if a valid user" time="0.039">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not authenticate user if request is invalid" time="0.052">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should generate new token if refreshToken is valid" time="0.032">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not generate new token if refresh token is not valid" time="0.016">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully create user when everything is valid" time="0.012">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not create user if request is invalid" time="0.061">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully remove user when everything is valid" time="0.012">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not remove user if request is invalid" time="0.033">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully get user if user exist" time="0.01">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not get user if request is invalid" time="0.03">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully get all user" time="0.013">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not get all user if request is invalid" time="0.023">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not deregister if method is invalid, id is missing or invalid" time="0.041">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully retrieve list of instances if parameter is valid" time="0.026">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not retrieve instances if method is invalid, ComponentType is missing or invalid" time="0.045">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should successfully retrieve number of instances if parameter is valid" time="0.021">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not retrieve number of instances if method is invalid, ComponentType is missing or invalid" time="0.049">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return an instance if id is valid and instance is present" time="0.015">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return 404 if instance id is not known" time="0.019">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return matching instance of specific type if parameters are valid" time="0.027">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return bad request when ComponentType is Invalid, Component is not found and Method not allowed" time="0.379">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should apply a matching result if parameters are valid" time="0.377">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should not process matching result if method or parameters are invalid" time="0.027">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should returns registry events that are associated to the instance if id is valid" time="0.102">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should does not return events if method is invalid or id is not found" time="0.02">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should get the whole network graph of the current registry" time="0.011">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should get a list of links from an instance if id is valid and links are present" time="0.088">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return no links found for invalid id" time="0.015">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should get a list of links to the instance with the specified id" time="0.107">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should return no links found to specified id" time="0.02">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should add a generic label to an instance is label and id are valid" time="0.009">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should fail to add label if id is invalid or label too long" time="0.024">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should fail to deploy if component type is invalid" time="0.011">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should fail to execute docker operations if id is invalid" time="0.083">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should fail to execute docker operations if instance is no docker container" time="0.06">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should fail to execute docker operations with wrong authorization supplied" time="0.042">
                                                 
                                               </testcase><testcase classname="de.upb.cs.swt.delphi.instanceregistry.connection.ServerTest" name="The Server should Requests should throttle when limit reached" time="0.375">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>